#!/bin/sh

#https://git.zx2c4.com/wireguard-tools/plain/contrib/ncat-client-server/



location="/tmp/puavo-vpn-internal-server.sh"
cat <<EOF > $location
#!/bin/bash
# SPDX-License-Identifier: GPL-2.0
#
# Copyright (C) 2015-2020 Jason A. Donenfeld <Jason@zx2c4.com>. All Rights Reserved.

if [[ -z $NCAT_REMOTE_ADDR ]]; then
ip link del dev wg0 2>/dev/null
set -e
ip link add dev wg0 type wireguard
ip address add 10.249.15.254 dev wg0
wg set wg0 private-key <(wg genkey) listen-port 12912
ip link set up dev wg0
exec ncat -e "$(readlink -f "$0")" -k -l -p 42912 -v
fi
read -r public_key
[[ $(wg show wg0 peers | wc -l) -ge 253 ]] && wg set wg0 peer $(wg show wg0 latest-handshakes | sort -k 2 -b -n | head -n 1 | cut -f 1) remove
next_ip=$(all="$(wg show wg0 allowed-ips)"; for ((i=2; i<=254; i++)); do ip="10.249.0.$i"; [[ $all != *$ip/32* ]] && echo $ip && break; done)
wg set wg0 peer "$public_key" allowed-ips $next_ip/32 2>/dev/null && echo "OK:$(wg show wg0 private-key | wg pubkey):$(wg show wg0 listen-port):$next_ip" || echo ERROR
EOF
chmod +x $location


ans=$(puavo-conf puavo.image.servers)

endpoint=""
for s in $ans;do
    echo $s | grep -q ':876' && endpoint=$s
done

if test -n "$endpoint";then
    $server=$(echo $endpoint | xargs | cut d: -f1)
    case $(puavo-conf puavo.hosttype); in
	laptop)
	    set -e
	    [[ $UID == 0 ]] || { echo "You must be root to run this."; exit 1; }
	    exec 3<>/dev/tcp/$server/42912
	    privatekey="$(wg genkey)"
	    wg pubkey <<EOF
<"$privatekey" >&3
IFS=: read -r status server_pubkey server_port internal_ip <&3
[[ $status == OK ]]
ip link del dev wg0 2>/dev/null || true
ip link add dev wg0 type wireguard
wg set wg0 private-key <(echo "$privatekey") peer "$server_pubkey" allowed-ips 0.0.0.0/0 endpoint "$server:$server_port" persistent-keepalive 25
ip address add "$internal_ip"/24 dev wg0
ip link set up dev wg0
EOF
	;;
	bootserver)
	    $location
	;;
	*)
	;;
    esac
fi

sleep 999999999999999999999
exit 1




